/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package product_management;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kazuto
 */
public class Category_Form extends javax.swing.JFrame {

    /**
     * Creates new form Category_Form
     */
    public Category_Form() {
        initComponents();
         // Khởi tạo form giữa màn hình
        this.setLocationRelativeTo(null);
        // Mở khóa button
        setButton(true);
        // Show dữ liệu lên JTable
        Show_Category_In_JTable();
    }
    
    //Set vị trí ban đầu
    int pos = 0;
    
    // Hàm kiểm tra giá trị của các textbox
    public boolean checkInputs()
    {
        if(
              txt_cateName.getText().equals("")
           || txt_descript.getText().equals("")
          ){
            return false;
        }
        else{
            return true;
        }
    }
    
    //Hiển thị dữ liệu lên JTable
    // 1 -  Đổ Data vào mảng Category
    public ArrayList<Category> getCategoryList()
    {
            ArrayList<Category> categoryList  = new ArrayList<Category>();
            Connection con = My_CNX.getConnection();
            String query = "SELECT * FROM category";
            
            Statement st;
            ResultSet rs;
            
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            Category category;
            
            while(rs.next())
            {
                category = new Category(rs.getInt("cateid"),rs.getString("name"),rs.getString("description"));
                categoryList.add(category);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return categoryList;      
    }
    
    //      2 - Đưa dlsp lên JTable
    
    public void Show_Category_In_JTable()
    {
        ArrayList<Category> list = getCategoryList();
        DefaultTableModel model = (DefaultTableModel)JTable_Category.getModel();
        // xóa dữ liệu jtable
       
        model.setRowCount(0);
        Object[] row = new Object[3];
        for(int i = 0; i < list.size(); i++)
        {
            row[0] = list.get(i).getCateid();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getDescription();
            
            model.addRow(row);
        }
    
    }
    
     //Hàm xóa các TextField
    public void setNull()
    {
        this.txt_cateid.setText(null);
        this.txt_cateName.setText(null);
        this.txt_descript.setText(null);
        this.txt_cateName.requestFocus();
    }
    
    //Hàm khóa các TextField
    public void setKhoa(boolean a)
    {
        //Khóa hoặc mở khóa cho các JTextField
        this.txt_cateName.setEnabled(!a);
        this.txt_descript.setEnabled(!a);
    }
    
    //Hàm khóa các Button
    public void setButton(boolean a)
    {
        //Vô hiệu hoặc có hiệu lực cho các JButton
        this.Btn_Insert.setEnabled(a);
        this.Btn_Delete.setEnabled(a);
        this.Btn_Update.setEnabled(a);
        this.Btn_Save.setEnabled(!a);
        
    }
    
    // hiện dữ liệu trên input
    public void ShowItem(int index)
    {
        try {
            txt_cateid.setText(Integer.toString(getCategoryList().get(index).getCateid()));
            txt_cateName.setText(getCategoryList().get(index).getName());
            txt_descript.setText(getCategoryList().get(index).getDescription());
        } catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_cateid = new javax.swing.JTextField();
        txt_cateName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        BtnMenu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable_Category = new javax.swing.JTable();
        Btn_Insert = new javax.swing.JButton();
        Btn_Update = new javax.swing.JButton();
        Btn_Delete = new javax.swing.JButton();
        Btn_Save = new javax.swing.JButton();
        BtnRefresh = new javax.swing.JButton();
        Btn_First = new javax.swing.JButton();
        Btn_Last = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_descript = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        txt_cateid.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        txt_cateid.setEnabled(false);

        txt_cateName.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Tên:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Mô tả:");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel6.setText("Danh mục loại sản phẩm");

        BtnMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/house.png"))); // NOI18N
        BtnMenu.setToolTipText("Về trang chủ");
        BtnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(110, 110, 110)
                .addComponent(BtnMenu))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BtnMenu))
        );

        JTable_Category.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên", "Mô tả"
            }
        ));
        JTable_Category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTable_CategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTable_Category);

        Btn_Insert.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Btn_Insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        Btn_Insert.setText("Thêm");
        Btn_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_InsertActionPerformed(evt);
            }
        });

        Btn_Update.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Btn_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refresh.png"))); // NOI18N
        Btn_Update.setText("Cập nhật");
        Btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_UpdateActionPerformed(evt);
            }
        });

        Btn_Delete.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Btn_Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        Btn_Delete.setText("Xóa");
        Btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_DeleteActionPerformed(evt);
            }
        });

        Btn_Save.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Btn_Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save-file-option.png"))); // NOI18N
        Btn_Save.setText("Lưu");
        Btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_SaveActionPerformed(evt);
            }
        });

        BtnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refresh (1).png"))); // NOI18N
        BtnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRefreshActionPerformed(evt);
            }
        });

        Btn_First.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Btn_First.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/left-arrow-outline-to-first-track.png"))); // NOI18N
        Btn_First.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_FirstActionPerformed(evt);
            }
        });

        Btn_Last.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Btn_Last.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/last-track-outlined-button.png"))); // NOI18N
        Btn_Last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LastActionPerformed(evt);
            }
        });

        txt_descript.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(txt_descript);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_cateName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel3))
                            .addComponent(txt_cateid, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Btn_Insert)
                        .addGap(1, 1, 1)
                        .addComponent(Btn_Update)
                        .addGap(2, 2, 2)
                        .addComponent(Btn_Delete)
                        .addGap(1, 1, 1)
                        .addComponent(Btn_Save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Btn_First, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Btn_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_cateid, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(txt_cateName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane2))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Btn_Last)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Btn_Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Btn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(BtnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Btn_First))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMenuActionPerformed
        // TODO add your handling code here:
        Menu_Form form = new Menu_Form();
        form.setVisible(true);
        form.pack();
        form.setLocationRelativeTo(null);
        // Đóng form hiện tại (Main_Window) mở form Menu (Menu_Form)
        this.dispose();
    }//GEN-LAST:event_BtnMenuActionPerformed

    private void JTable_CategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTable_CategoryMouseClicked
        // TODO add your handling code here:
        setButton(true);
        int index = JTable_Category.getSelectedRow();
        ShowItem(index);
    }//GEN-LAST:event_JTable_CategoryMouseClicked

    private void Btn_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_InsertActionPerformed
        // TODO add your handling code here:
        //Xóa TextField
        setNull();
        //Khóa các button không liên quan
        setButton(false);

        
    }//GEN-LAST:event_Btn_InsertActionPerformed

    private void Btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_UpdateActionPerformed
        // TODO add your handling code here:
        if(checkInputs() && txt_cateid.getText() != null)
        {
            String UpdateQuery = null;
            PreparedStatement ps = null;
            Connection con = My_CNX.getConnection();

            try {
                UpdateQuery = "UPDATE category SET name = ?, description = ? WHERE cateid = ?";
                ps = con.prepareStatement(UpdateQuery);

                ps.setString(1, txt_cateName.getText());
                ps.setString(2, txt_descript.getText());

                ps.setInt(3, Integer.parseInt(txt_cateid.getText()));

                ps.executeUpdate();
                Show_Category_In_JTable();
                JOptionPane.showMessageDialog(null, "Đã cập nhật loại");

            } catch (SQLException ex) {
                Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Dữ liệu còn thiếu, vui lòng nhập thêm");
        }
    }//GEN-LAST:event_Btn_UpdateActionPerformed

    private void Btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_DeleteActionPerformed
        // TODO add your handling code here:
        String ten = txt_cateName.getText();
        if(!txt_cateid.getText().equals(""))
        {
            try {
                if (JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa loại "+ten+" không?","Thông báo", 2)==0){
                    Connection con = My_CNX.getConnection();
                    PreparedStatement ps = con.prepareStatement("DELETE FROM category WHERE cateid = ?");
                    int id = Integer.parseInt(txt_cateid.getText());
                    ps.setInt(1, id);
                    ps.executeUpdate();
                    Show_Category_In_JTable();
                    //Xóa dữ liệu trong TextField
                    setNull();
                }

            } catch (SQLException ex) {
                Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Xóa thất bại");
            }

        }else{
            JOptionPane.showMessageDialog(null, "Chọn 1 loại để xóa","Thông báo", 1);
        }
    }//GEN-LAST:event_Btn_DeleteActionPerformed

    String flag = null;
    private void Btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_SaveActionPerformed
        // TODO add your handling code here:
        if(checkInputs())
        {
            try {
                Connection con = My_CNX.getConnection();
                PreparedStatement ps = con.prepareStatement("INSERT INTO category(name,description)" + " values(?,?) ");
                ps.setString(1, txt_cateName.getText());
                ps.setString(2, txt_descript.getText());
                ps.executeUpdate();
                setNull();
                setButton(true);
                Show_Category_In_JTable();

                JOptionPane.showMessageDialog(null, "Dữ liệu đã được thêm");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(null, "Dữ liệu còn thiếu, vui lòng nhập thêm");
        }

        // test
        System.out.println("Name => "+txt_cateName.getText());
        System.out.println("Price => "+txt_descript.getText());
        
    }//GEN-LAST:event_Btn_SaveActionPerformed

    private void BtnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRefreshActionPerformed
        // TODO add your handling code here:
        Category_Form form = new Category_Form();
        form.setVisible(true);
        form.pack();
        form.setLocationRelativeTo(null);
        // Đóng form hiện tại (Main_Window) mở form Menu (Menu_Form)
        this.dispose();
    }//GEN-LAST:event_BtnRefreshActionPerformed

    private void Btn_FirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_FirstActionPerformed
        // TODO add your handling code here:
        pos = 0;
        ShowItem(pos);
    }//GEN-LAST:event_Btn_FirstActionPerformed

    private void Btn_LastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LastActionPerformed
        // TODO add your handling code here:
        pos = getCategoryList().size()-1;
        ShowItem(pos);
    }//GEN-LAST:event_Btn_LastActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Category_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Category_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Category_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Category_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Category_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnMenu;
    private javax.swing.JButton BtnRefresh;
    private javax.swing.JButton Btn_Delete;
    private javax.swing.JButton Btn_First;
    private javax.swing.JButton Btn_Insert;
    private javax.swing.JButton Btn_Last;
    private javax.swing.JButton Btn_Save;
    private javax.swing.JButton Btn_Update;
    private javax.swing.JTable JTable_Category;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt_cateName;
    private javax.swing.JTextField txt_cateid;
    private javax.swing.JTextPane txt_descript;
    // End of variables declaration//GEN-END:variables
}
